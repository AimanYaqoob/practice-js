// SPDX-License-Identifier: Unlicensed
pragma solidity ^0.8.15;
contract practice{
    function hcf(uint256 num1,uint256 num2) public pure returns(uint256){
        uint256 hcfNum;
        for(uint256 i=1 ; i<=num1 && i<=num2 ; i++){
            if(num1 % i==0 && num2 % i==0){
                hcfNum=i;
            }
        }
        return hcfNum;
    }
}






// SPDX-License-Identifier: Unlicensed
pragma solidity ^0.8.15;
contract practice{
    function hcf(uint256 n1, uint256 n2) public pure returns (uint256) {
        if (n2 != 0) {
            return hcf(n2, n1 % n2);
        } else {
            return n1;
        }
    }
}
